"""empty message

Revision ID: c953369ac53a
Revises: 4ed71f6c9e0b
Create Date: 2022-08-15 06:17:24.669833

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'c953369ac53a'
down_revision = '4ed71f6c9e0b'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('campaigns',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.String(length=80), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('count_down', sa.Integer(), nullable=True),
    sa.Column('campaign_status', sa.String(length=80), nullable=True),
    sa.Column('campaign_winner', sa.String(length=100), nullable=True),
    sa.Column('minimum_buy_amount', sa.Integer(), nullable=True),
    sa.Column('campaing_type', sa.String(length=120), nullable=True),
    sa.Column('prize', sa.String(length=30), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['group.group_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('campaign_id', sa.Integer(), nullable=True),
    sa.Column('buyer_address', sa.String(length=100), nullable=True),
    sa.Column('buyer_amount', sa.Integer(), nullable=True),
    sa.Column('transaction_link', sa.String(length=100), nullable=True),
    sa.Column('transaction_chain', sa.String(length=20), nullable=True),
    sa.Column('cmapaign_type', sa.String(length=100), nullable=True),
    sa.Column('group_id', sa.String(length=80), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['campaigns.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['group.group_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('raffle_transaction')
    op.drop_table('raffle_campaign')
    op.drop_table('biggest_buy_transaction')
    op.drop_table('biggest_buy_campaign')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('biggest_buy_transaction',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('biggest_buy_campaign_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('buyer_address', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('buyer_amount', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('transaction_link', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('transaction_chain', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('group_id', sa.VARCHAR(length=80), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['biggest_buy_campaign_id'], ['biggest_buy_campaign.id'], name='biggest_buy_transaction_biggest_buy_campaign_id_fkey'),
    sa.ForeignKeyConstraint(['group_id'], ['group.group_id'], name='biggest_buy_transaction_group_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='biggest_buy_transaction_pkey')
    )
    op.create_table('biggest_buy_campaign',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('group_id', sa.VARCHAR(length=80), autoincrement=False, nullable=True),
    sa.Column('start_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('end_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('count_down', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('campaign_status', sa.VARCHAR(length=80), autoincrement=False, nullable=True),
    sa.Column('campaign_winner', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('minimum_buy_amount', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('prize', sa.VARCHAR(length=30), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['group.group_id'], name='biggest_buy_campaign_group_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='biggest_buy_campaign_pkey')
    )
    op.create_table('raffle_campaign',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('raffle_campaign_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('group_id', sa.VARCHAR(length=80), autoincrement=False, nullable=True),
    sa.Column('start_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('end_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('count_down', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('campaign_status', sa.VARCHAR(length=80), autoincrement=False, nullable=True),
    sa.Column('campaign_winner', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('minimum_buy_amount', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('prize', sa.VARCHAR(length=30), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['group.group_id'], name='raffle_campaign_group_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='raffle_campaign_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('raffle_transaction',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('raffle_campaign_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('buyer_address', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('buyer_amount', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('transaction_link', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('transaction_chain', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('group_id', sa.VARCHAR(length=80), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['group.group_id'], name='raffle_transaction_group_id_fkey'),
    sa.ForeignKeyConstraint(['raffle_campaign_id'], ['raffle_campaign.id'], name='raffle_transaction_raffle_campaign_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='raffle_transaction_pkey')
    )
    op.drop_table('transactions')
    op.drop_table('campaigns')
    # ### end Alembic commands ###
