"""empty message

Revision ID: b92c868fc67b
Revises: 
Create Date: 2022-07-17 18:30:56.167463

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b92c868fc67b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admin',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('admin_id', sa.String(length=80), nullable=True),
    sa.Column('admin_username', sa.String(length=80), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('group',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.String(length=80), nullable=True),
    sa.Column('group_title', sa.Text(), nullable=True),
    sa.Column('username', sa.Text(), nullable=True),
    sa.Column('sign_up_date', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('group_id')
    )
    op.create_table('supported_chain',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('chain_name', sa.String(length=20), nullable=True),
    sa.Column('chain_id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('chain_id')
    )
    op.create_table('active_competition',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.String(length=80), nullable=True),
    sa.Column('competition_type', sa.String(length=80), nullable=True),
    sa.Column('competition_id', sa.String(length=80), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['group.group_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('biggest_buy_campaign',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.String(length=80), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('count_down', sa.Integer(), nullable=True),
    sa.Column('campaign_status', sa.String(length=80), nullable=True),
    sa.Column('campaign_winner', sa.String(length=100), nullable=True),
    sa.Column('minimum_buy_amount', sa.Integer(), nullable=True),
    sa.Column('prize', sa.String(length=30), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['group.group_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('raffle_campaign',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.String(length=80), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('count_down', sa.Integer(), nullable=True),
    sa.Column('campaign_status', sa.String(length=80), nullable=True),
    sa.Column('campaign_winner', sa.String(length=100), nullable=True),
    sa.Column('minimum_buy_amount', sa.Integer(), nullable=True),
    sa.Column('prize', sa.String(length=30), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['group.group_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('supported_exchange',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('exchange_name', sa.String(length=20), nullable=True),
    sa.Column('router_address', sa.String(length=100), nullable=False),
    sa.Column('factory_address', sa.String(length=100), nullable=False),
    sa.Column('chain_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['chain_id'], ['supported_chain.chain_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('factory_address'),
    sa.UniqueConstraint('router_address')
    )
    op.create_table('supported_pairs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pair_name', sa.String(length=20), nullable=True),
    sa.Column('pair_address', sa.String(length=100), nullable=False),
    sa.Column('chain_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['chain_id'], ['supported_chain.chain_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('pair_address')
    )
    op.create_table('tracked_token',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('token_address', sa.String(length=100), nullable=True),
    sa.Column('token_name', sa.String(length=100), nullable=True),
    sa.Column('token_symbol', sa.String(length=20), nullable=True),
    sa.Column('token_decimals', sa.Integer(), nullable=True),
    sa.Column('pair_address', sa.String(length=100), nullable=True),
    sa.Column('group_id', sa.String(length=80), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['group.group_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('wallet',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('wallet_address', sa.String(length=100), nullable=True),
    sa.Column('wallet_private_key', sa.String(length=100), nullable=True),
    sa.Column('group_id', sa.String(length=80), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['group.group_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('biggest_buy_transaction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('biggest_buy_campaign_id', sa.Integer(), nullable=True),
    sa.Column('buyer_address', sa.String(length=100), nullable=True),
    sa.Column('buyer_amount', sa.Integer(), nullable=True),
    sa.Column('transaction_link', sa.String(length=100), nullable=True),
    sa.Column('transaction_chain', sa.String(length=20), nullable=True),
    sa.Column('group_id', sa.String(length=80), nullable=True),
    sa.ForeignKeyConstraint(['biggest_buy_campaign_id'], ['biggest_buy_campaign.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['group.group_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('raffle_transaction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('raffle_campaign_id', sa.Integer(), nullable=True),
    sa.Column('buyer_address', sa.String(length=100), nullable=True),
    sa.Column('buyer_amount', sa.Integer(), nullable=True),
    sa.Column('transaction_link', sa.String(length=100), nullable=True),
    sa.Column('transaction_chain', sa.String(length=20), nullable=True),
    sa.Column('group_id', sa.String(length=80), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['group.group_id'], ),
    sa.ForeignKeyConstraint(['raffle_campaign_id'], ['raffle_campaign.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subscription',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.String(length=80), nullable=True),
    sa.Column('wallet_id', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('subscription_type', sa.String(length=80), nullable=True),
    sa.Column('subscription_status', sa.String(length=80), nullable=True),
    sa.Column('tx_hash', sa.String(length=120), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['group.group_id'], ),
    sa.ForeignKeyConstraint(['wallet_id'], ['wallet.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tx_hash')
    )
    op.create_table('token_chains',
    sa.Column('token_id', sa.Integer(), nullable=True),
    sa.Column('chain_id', sa.Integer(), nullable=True),
    sa.Column('pair_id', sa.Integer(), nullable=True),
    sa.Column('exchange_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['chain_id'], ['supported_chain.id'], ),
    sa.ForeignKeyConstraint(['exchange_id'], ['supported_exchange.id'], ),
    sa.ForeignKeyConstraint(['pair_id'], ['supported_pairs.id'], ),
    sa.ForeignKeyConstraint(['token_id'], ['tracked_token.id'], )
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('token_chains')
    op.drop_table('subscription')
    op.drop_table('raffle_transaction')
    op.drop_table('biggest_buy_transaction')
    op.drop_table('wallet')
    op.drop_table('tracked_token')
    op.drop_table('supported_pairs')
    op.drop_table('supported_exchange')
    op.drop_table('raffle_campaign')
    op.drop_table('biggest_buy_campaign')
    op.drop_table('active_competition')
    op.drop_table('supported_chain')
    op.drop_table('group')
    op.drop_table('admin')
    # ### end Alembic commands ###
