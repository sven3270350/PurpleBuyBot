"""empty message

Revision ID: dc9702f2b1c9
Revises: 15f8ba37aebb
Create Date: 2022-07-03 15:07:39.806607

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'dc9702f2b1c9'
down_revision = '15f8ba37aebb'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admin',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('admin_id', sa.String(length=80), nullable=True),
    sa.Column('admin_username', sa.String(length=80), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transaction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('campaign_type', sa.String(length=80), nullable=True),
    sa.Column('campaign_id', sa.String(length=80), nullable=True),
    sa.Column('buyer_address', sa.String(length=100), nullable=True),
    sa.Column('buyer_amount', sa.Integer(), nullable=True),
    sa.Column('transaction_link', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('active_competition',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.String(length=80), nullable=True),
    sa.Column('competition_type', sa.String(length=80), nullable=True),
    sa.Column('competition_id', sa.String(length=80), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['group.group_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tracked_token',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('token_address', sa.String(length=100), nullable=True),
    sa.Column('token_name', sa.String(length=100), nullable=True),
    sa.Column('token_symbol', sa.String(length=20), nullable=True),
    sa.Column('token_decimals', sa.Integer(), nullable=True),
    sa.Column('pair_address', sa.String(length=100), nullable=True),
    sa.Column('group_id', sa.String(length=80), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['group.group_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('wallet',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('wallet_address', sa.String(length=100), nullable=True),
    sa.Column('wallet_private_key', sa.String(length=100), nullable=True),
    sa.Column('group_id', sa.String(length=80), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['group.group_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('token_chains',
    sa.Column('token_id', sa.Integer(), nullable=True),
    sa.Column('chain_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['chain_id'], ['supported_chain.id'], ),
    sa.ForeignKeyConstraint(['token_id'], ['tracked_token.id'], )
    )
    op.drop_table('transactions')
    op.drop_table('admins')
    op.drop_table('active_competitions')
    op.drop_table('wallets')
    op.drop_table('tokens')
    op.add_column('biggest_buy_campaign', sa.Column('group_id', sa.String(length=80), nullable=True))
    op.add_column('biggest_buy_campaign', sa.Column('start_time', sa.DateTime(), nullable=True))
    op.add_column('biggest_buy_campaign', sa.Column('end_time', sa.DateTime(), nullable=True))
    op.add_column('biggest_buy_campaign', sa.Column('count_down', sa.Integer(), nullable=True))
    op.add_column('biggest_buy_campaign', sa.Column('campaign_status', sa.String(length=80), nullable=True))
    op.add_column('biggest_buy_campaign', sa.Column('campaing_winner', sa.String(length=100), nullable=True))
    op.add_column('biggest_buy_campaign', sa.Column('minimum_buy_amount', sa.Integer(), nullable=True))
    op.add_column('biggest_buy_campaign', sa.Column('prize', sa.String(length=30), nullable=True))
    op.create_foreign_key(None, 'biggest_buy_campaign', 'group', ['group_id'], ['group_id'])
    op.add_column('raffle_campaign', sa.Column('group_id', sa.String(length=80), nullable=True))
    op.add_column('raffle_campaign', sa.Column('start_time', sa.DateTime(), nullable=True))
    op.add_column('raffle_campaign', sa.Column('end_time', sa.DateTime(), nullable=True))
    op.add_column('raffle_campaign', sa.Column('count_down', sa.Integer(), nullable=True))
    op.add_column('raffle_campaign', sa.Column('campaign_status', sa.String(length=80), nullable=True))
    op.add_column('raffle_campaign', sa.Column('campaing_winner', sa.String(length=100), nullable=True))
    op.add_column('raffle_campaign', sa.Column('minimum_buy_amount', sa.Integer(), nullable=True))
    op.add_column('raffle_campaign', sa.Column('prize', sa.String(length=30), nullable=True))
    op.create_foreign_key(None, 'raffle_campaign', 'group', ['group_id'], ['group_id'])
    op.add_column('subscription', sa.Column('group_id', sa.String(length=80), nullable=True))
    op.add_column('subscription', sa.Column('wallet_id', sa.Integer(), nullable=True))
    op.add_column('subscription', sa.Column('start_date', sa.DateTime(), nullable=True))
    op.add_column('subscription', sa.Column('end_date', sa.DateTime(), nullable=True))
    op.add_column('subscription', sa.Column('subscription_type', sa.String(length=80), nullable=True))
    op.add_column('subscription', sa.Column('subscription_status', sa.String(length=80), nullable=True))
    op.add_column('subscription', sa.Column('tx_hash', sa.String(length=120), nullable=True))
    op.create_unique_constraint(None, 'subscription', ['tx_hash'])
    op.create_foreign_key(None, 'subscription', 'wallet', ['wallet_id'], ['id'])
    op.create_foreign_key(None, 'subscription', 'group', ['group_id'], ['group_id'])
    op.add_column('supported_chain', sa.Column('chain_name', sa.String(length=20), nullable=True))
    op.add_column('supported_chain', sa.Column('chain_id', sa.String(length=20), nullable=True))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('supported_chain', 'chain_id')
    op.drop_column('supported_chain', 'chain_name')
    op.drop_constraint(None, 'subscription', type_='foreignkey')
    op.drop_constraint(None, 'subscription', type_='foreignkey')
    op.drop_constraint(None, 'subscription', type_='unique')
    op.drop_column('subscription', 'tx_hash')
    op.drop_column('subscription', 'subscription_status')
    op.drop_column('subscription', 'subscription_type')
    op.drop_column('subscription', 'end_date')
    op.drop_column('subscription', 'start_date')
    op.drop_column('subscription', 'wallet_id')
    op.drop_column('subscription', 'group_id')
    op.drop_constraint(None, 'raffle_campaign', type_='foreignkey')
    op.drop_column('raffle_campaign', 'prize')
    op.drop_column('raffle_campaign', 'minimum_buy_amount')
    op.drop_column('raffle_campaign', 'campaing_winner')
    op.drop_column('raffle_campaign', 'campaign_status')
    op.drop_column('raffle_campaign', 'count_down')
    op.drop_column('raffle_campaign', 'end_time')
    op.drop_column('raffle_campaign', 'start_time')
    op.drop_column('raffle_campaign', 'group_id')
    op.drop_constraint(None, 'biggest_buy_campaign', type_='foreignkey')
    op.drop_column('biggest_buy_campaign', 'prize')
    op.drop_column('biggest_buy_campaign', 'minimum_buy_amount')
    op.drop_column('biggest_buy_campaign', 'campaing_winner')
    op.drop_column('biggest_buy_campaign', 'campaign_status')
    op.drop_column('biggest_buy_campaign', 'count_down')
    op.drop_column('biggest_buy_campaign', 'end_time')
    op.drop_column('biggest_buy_campaign', 'start_time')
    op.drop_column('biggest_buy_campaign', 'group_id')
    op.create_table('tokens',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id', name='tokens_pkey')
    )
    op.create_table('wallets',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id', name='wallets_pkey')
    )
    op.create_table('active_competitions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id', name='active_competitions_pkey')
    )
    op.create_table('admins',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id', name='admins_pkey')
    )
    op.create_table('transactions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id', name='transactions_pkey')
    )
    op.drop_table('token_chains')
    op.drop_table('wallet')
    op.drop_table('tracked_token')
    op.drop_table('active_competition')
    op.drop_table('transaction')
    op.drop_table('admin')
    # ### end Alembic commands ###
